<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="https://weekly.dongyueweb.com/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.6.3">Jekyll</generator><link href="https://weekly.dongyueweb.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://weekly.dongyueweb.com/" rel="alternate" type="text/html" /><updated>2019-02-04T10:00:58+08:00</updated><id>https://weekly.dongyueweb.com//</id><title type="html">Dev Comm Shanghai 联合周报</title><subtitle>由上海交通大学东岳网络工作室，SJTU *NIX User Group和上海大学开源社区联合维护的周报
</subtitle><entry><title type="html">Weekly</title><link href="https://weekly.dongyueweb.com/weekly/2019/02/04/weekly.html" rel="alternate" type="text/html" title="Weekly" /><published>2019-02-04T00:00:00+08:00</published><updated>2019-02-04T00:00:00+08:00</updated><id>https://weekly.dongyueweb.com/weekly/2019/02/04/weekly</id><content type="html" xml:base="https://weekly.dongyueweb.com/weekly/2019/02/04/weekly.html">&lt;p&gt;&lt;a href=&quot;https://github.com/wzshiming/gen&quot;&gt;https://github.com/wzshiming/gen&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Generate interface source code for micro services&lt;/p&gt;

&lt;p&gt;Just write normal functions, and Gen generates efficient routing source code and documentation for it Because the source code is generated, none of this affects runtime performance
The differences caused by each change in the tool are shown directly in the generated source code
generating clients is also supported&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://learngitbranching.js.org/&quot;&gt;https://learngitbranching.js.org/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;休闲养生小游戏，感受到了 &lt;code&gt;git merge&lt;/code&gt; 的 dirty（&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/4198311/51113844-7a46a580-183e-11e9-8c64-bc8f1773c0d3.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/kubernetes-sigs/kubespray&quot;&gt;https://github.com/kubernetes-sigs/kubespray&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;deploy k8s cluster in virtualbox/aws/azure/more&lt;/p&gt;

&lt;p&gt;我总觉得 k8s 部署这么复杂，不是用外部写好的脚本就能解决的，可能有一些架构上的锅需要改&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/d5/tengo&quot;&gt;https://github.com/d5/tengo&lt;/a&gt; A fast script language for Go &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Tengo is fast as it&amp;#39;s compiled to bytecode and executed on stack-based VM that&amp;#39;s written in native Go&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/nektos/act&quot;&gt;https://github.com/nektos/act&lt;/a&gt; run github action locally (feels like make and can even generate a flow diagram in cli ...)&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.acolyer.org/2019/01/16/sagedb-a-learned-database-system/&quot;&gt;https://blog.acolyer.org/2019/01/16/sagedb-a-learned-database-system/&lt;/a&gt; the morning paper from CIDR 2019&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;CIDR 2019 &lt;a href=&quot;http://cidrdb.org/cidr2019/papers/p119-hellerstein-cidr19.pdf&quot;&gt;http://cidrdb.org/cidr2019/papers/p119-hellerstein-cidr19.pdf&lt;/a&gt; Serverless Computing: One Step Forward, Two Steps Back&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/basecs/compressing-radix-trees-without-too-many-tears-a2e658adb9a0&quot;&gt;https://medium.com/basecs/compressing-radix-trees-without-too-many-tears-a2e658adb9a0&lt;/a&gt; (compress 之后怎么存没怎么提 ...&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://notes.shichao.io/lkd/ch4/&quot;&gt;https://notes.shichao.io/lkd/ch4/&lt;/a&gt; 别人的笔记 cc @gaocegege &lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://www.beyondjava.net/escape-analysis-java&quot;&gt;https://www.beyondjava.net/escape-analysis-java&lt;/a&gt; 比较浅显的 ... 我以前只知道 go 有 escape analyais 里面提到了 scalar replacement 针对一个 class 里只有一个 int 的优化 ... 另外除了 heap -&amp;gt; stack, escape analysis 还能用来移除用不到的 lock (i.e. StringBuffer 的 length 的 synchronized) &lt;/p&gt;

&lt;p&gt;我为什么开始看 java 了.jpg&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://aosabook.org/en/500L/clustering-by-consensus.html&quot;&gt;http://aosabook.org/en/500L/clustering-by-consensus.html&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://aosabook.org/en/index.html&quot;&gt;http://aosabook.org/en/index.html&lt;/a&gt; must have posted it before ... but worth posting it again ...&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/aws/lumberyard&quot;&gt;https://github.com/aws/lumberyard&lt;/a&gt; aws 还有开源的 3a 引擎 ...&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Setting up a new computer &lt;a href=&quot;https://github.com/nnja/new-computer&quot;&gt;https://github.com/nnja/new-computer&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://whydoesaptnotusehttps.com/&quot;&gt;https://whydoesaptnotusehttps.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Why does APT not use HTTPS?&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/oracle/mysql-operator&quot;&gt;https://github.com/oracle/mysql-operator&lt;/a&gt; oracle 居然有 mysql operator&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://arxiv.org/abs/1709.07821&quot;&gt;https://arxiv.org/abs/1709.07821&lt;/a&gt; Roaring Bitmaps: Implementation of an Optimized Software Library 
通过 simd 加速 union, intersect (对 filter 类的 query 有用? 我记得 influxdb 有在 index 里用到过) 感觉 text search 的都有用到&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/RoaringBitmap/RoaringBitmap&quot;&gt;https://github.com/RoaringBitmap/RoaringBitmap&lt;/a&gt; &lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.cloudera.com/blog/2013/02/inside-cloudera-impala-runtime-code-generation/&quot;&gt;https://blog.cloudera.com/blog/2013/02/inside-cloudera-impala-runtime-code-generation/&lt;/a&gt; apache impala code gen&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Life of a triangle &lt;a href=&quot;https://developer.nvidia.com/content/life-triangle-nvidias-logical-pipeline&quot;&gt;https://developer.nvidia.com/content/life-triangle-nvidias-logical-pipeline&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;cache-aware Trie&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Tessil/hat-trie&quot;&gt;https://github.com/Tessil/hat-trie&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/uber/aresdb&quot;&gt;https://github.com/uber/aresdb&lt;/a&gt; uber GPU db for realtime analytical &lt;a href=&quot;https://eng.uber.com/aresdb/&quot;&gt;https://eng.uber.com/aresdb/&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/iina/iina&quot;&gt;https://github.com/iina/iina&lt;/a&gt; video player in mac&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/pbghogehoge/ssg&quot;&gt;https://github.com/pbghogehoge/ssg&lt;/a&gt; 秋霜玉
(good old game...
(文物开源系列(&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;开了谷歌翻译之后它居然会在滚动的过程中把代码注释里的日文逐渐替换成英语 ... 我以为都是整个页面翻译 &lt;a href=&quot;https://github.com/pbghogehoge/ssg/blob/master/MAIN/MAIN.CPP&quot;&gt;https://github.com/pbghogehoge/ssg/blob/master/MAIN/MAIN.CPP&lt;/a&gt; ... /w\ 火星了&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://refactoring.com/catalog/&quot;&gt;https://refactoring.com/catalog/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;重构技巧字典（不是很全）&lt;/p&gt;

&lt;hr&gt;</content><author><name>东岳</name></author><category term="Weekly" /><summary type="html">https://github.com/wzshiming/gen

Generate interface source code for micro services

Just write normal functions, and Gen generates efficient routing source code and documentation for it Because the source code is generated, none of this affects runtime performance
The differences caused by each change in the tool are shown directly in the generated source code
generating clients is also supported</summary></entry><entry><title type="html">Weekly</title><link href="https://weekly.dongyueweb.com/weekly/2019/01/14/weekly.html" rel="alternate" type="text/html" title="Weekly" /><published>2019-01-14T00:00:00+08:00</published><updated>2019-01-14T00:00:00+08:00</updated><id>https://weekly.dongyueweb.com/weekly/2019/01/14/weekly</id><content type="html" xml:base="https://weekly.dongyueweb.com/weekly/2019/01/14/weekly.html">&lt;p&gt;&lt;a href=&quot;https://explained.ai/decision-tree-viz/index.html&quot;&gt;https://explained.ai/decision-tree-viz/index.html&lt;/a&gt; also mentioned &lt;a href=&quot;https://www.edwardtufte.com/tufte/&quot;&gt;https://www.edwardtufte.com/tufte/&lt;/a&gt; which has a book THE VISUAL DISPLAY OF QUANTITATIVE INFORMATION&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://dependabot.com/rust/&quot;&gt;https://dependabot.com/rust/&lt;/a&gt; Dependabot creates pull requests to keep your Rust dependencies up-to-date. (感觉很有意思，说不定 weekly-gen 可以试试&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;类似 Node 的 greenkeeper?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;在 2019年1月8日，20:41，Zhang Yuning &lt;a href=&quot;mailto:notifications@github.com&quot;&gt;notifications@github.com&lt;/a&gt; 写道：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://dependabot.com/rust/&quot;&gt;https://dependabot.com/rust/&lt;/a&gt; &lt;a href=&quot;https://dependabot.com/rust/&quot;&gt;https://dependabot.com/rust/&lt;/a&gt; Dependabot creates pull requests to keep your Rust dependencies up-to-date. (感觉很有意思，说不定 weekly-gen 可以试试&lt;/p&gt;

&lt;p&gt;—
You are receiving this because you are subscribed to this thread.
Reply to this email directly, view it on GitHub &lt;a href=&quot;https://github.com/dyweb/weekly/issues/94#issuecomment-452569990&quot;&gt;https://github.com/dyweb/weekly/issues/94#issuecomment-452569990&lt;/a&gt;, or mute the thread &lt;a href=&quot;https://github.com/notifications/unsubscribe-auth/AGssTuerbLflK0UH-8wB80sfbNqa-eeIks5vBXMJgaJpZM4Z0zY7&quot;&gt;https://github.com/notifications/unsubscribe-auth/AGssTuerbLflK0UH-8wB80sfbNqa-eeIks5vBXMJgaJpZM4Z0zY7&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr&gt;

&lt;p&gt;自动签本地 https 证书！ &lt;a href=&quot;https://github.com/FiloSottile/mkcert&quot;&gt;https://github.com/FiloSottile/mkcert&lt;/a&gt;
（想起了被 OpenSSL 支配的恐惧&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://izbicki.me/blog/hlearn-cross-validates-400x-faster-than-weka&quot;&gt;https://izbicki.me/blog/hlearn-cross-validates-400x-faster-than-weka&lt;/a&gt; 一句话概括就是：有人用Haskell写了个比Weka快400倍的朴素贝叶斯cross validation，然后发到了ICML13上：&lt;a href=&quot;https://izbicki.me/public/papers/icml2013-algebraic-classifiers.pdf&quot;&gt;https://izbicki.me/public/papers/icml2013-algebraic-classifiers.pdf&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;来源：&lt;a href=&quot;https://www.zhihu.com/question/23779178/answer/49218369&quot;&gt;https://www.zhihu.com/question/23779178/answer/49218369&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://sreeninet.wordpress.com/2016/05/29/macvlan-and-ipvlan/&quot;&gt;https://sreeninet.wordpress.com/2016/05/29/macvlan-and-ipvlan/&lt;/a&gt; 现在 k8s 主流的容器网络是? @gaocegege &lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tonsky/FiraCode&quot;&gt;https://github.com/tonsky/FiraCode&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Haskell 程序员表示代码可阅读性翻倍（&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/4198311/51073190-2e61f800-16a8-11e9-993a-6251ef706480.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;分不清 &lt;code&gt;==&lt;/code&gt; 和 &lt;code&gt;===&lt;/code&gt; 会不会是一个锅？&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;在 2019年1月12日，04:23，Alex Chi &lt;a href=&quot;mailto:notifications@github.com&quot;&gt;notifications@github.com&lt;/a&gt; 写道：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tonsky/FiraCode&quot;&gt;https://github.com/tonsky/FiraCode&lt;/a&gt; &lt;a href=&quot;https://github.com/tonsky/FiraCode&quot;&gt;https://github.com/tonsky/FiraCode&lt;/a&gt;
Haskell 程序员表示代码可阅读性翻倍（&lt;/p&gt;

&lt;p&gt;—
You are receiving this because you commented.
Reply to this email directly, view it on GitHub &lt;a href=&quot;https://github.com/dyweb/weekly/issues/94#issuecomment-453743356&quot;&gt;https://github.com/dyweb/weekly/issues/94#issuecomment-453743356&lt;/a&gt;, or mute the thread &lt;a href=&quot;https://github.com/notifications/unsubscribe-auth/AGssTtZq4-JCaN3rQ8VFVYhXEfIFVdfMks5vCdOygaJpZM4Z0zY7&quot;&gt;https://github.com/notifications/unsubscribe-auth/AGssTtZq4-JCaN3rQ8VFVYhXEfIFVdfMks5vCdOygaJpZM4Z0zY7&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr&gt;

&lt;p&gt;哦原来 &lt;code&gt;===&lt;/code&gt; 是三个等号，没毛病&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;在 2019年1月12日，04:23，Alex Chi &lt;a href=&quot;mailto:notifications@github.com&quot;&gt;notifications@github.com&lt;/a&gt; 写道：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tonsky/FiraCode&quot;&gt;https://github.com/tonsky/FiraCode&lt;/a&gt; &lt;a href=&quot;https://github.com/tonsky/FiraCode&quot;&gt;https://github.com/tonsky/FiraCode&lt;/a&gt;
Haskell 程序员表示代码可阅读性翻倍（&lt;/p&gt;

&lt;p&gt;—
You are receiving this because you commented.
Reply to this email directly, view it on GitHub &lt;a href=&quot;https://github.com/dyweb/weekly/issues/94#issuecomment-453743356&quot;&gt;https://github.com/dyweb/weekly/issues/94#issuecomment-453743356&lt;/a&gt;, or mute the thread &lt;a href=&quot;https://github.com/notifications/unsubscribe-auth/AGssTtZq4-JCaN3rQ8VFVYhXEfIFVdfMks5vCdOygaJpZM4Z0zY7&quot;&gt;https://github.com/notifications/unsubscribe-auth/AGssTtZq4-JCaN3rQ8VFVYhXEfIFVdfMks5vCdOygaJpZM4Z0zY7&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/be5invis/Sarasa-Gothic&quot;&gt;https://github.com/be5invis/Sarasa-Gothic&lt;/a&gt;
@SkyZH I use this one...&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;from &lt;a href=&quot;https://github.com/zenany/weekly/commit/440dc4c024c2501ec65e45b3dddf90c7f852e011&quot;&gt;https://github.com/zenany/weekly/commit/440dc4c024c2501ec65e45b3dddf90c7f852e011&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://engineering.linkedin.com/blog/2019/01/introducing-thirdeye--linkedins-business-wide-monitoring-platfor&quot;&gt;https://engineering.linkedin.com/blog/2019/01/introducing-thirdeye--linkedins-business-wide-monitoring-platfor&lt;/a&gt; forgot they have a open source column store &lt;a href=&quot;https://github.com/apache/incubator-pinot&quot;&gt;https://github.com/apache/incubator-pinot&lt;/a&gt; (the arch looks like Druid ...)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.yuque.com/mo-college/weekly/ny35wg&quot;&gt;https://www.yuque.com/mo-college/weekly/ny35wg&lt;/a&gt; 一个 visualization 的年度合集?&lt;/p&gt;

&lt;hr&gt;</content><author><name>东岳</name></author><category term="Weekly" /><summary type="html">https://explained.ai/decision-tree-viz/index.html also mentioned https://www.edwardtufte.com/tufte/ which has a book THE VISUAL DISPLAY OF QUANTITATIVE INFORMATION</summary></entry><entry><title type="html">Weekly</title><link href="https://weekly.dongyueweb.com/weekly/2019/01/07/weekly.html" rel="alternate" type="text/html" title="Weekly" /><published>2019-01-07T00:00:00+08:00</published><updated>2019-01-07T00:00:00+08:00</updated><id>https://weekly.dongyueweb.com/weekly/2019/01/07/weekly</id><content type="html" xml:base="https://weekly.dongyueweb.com/weekly/2019/01/07/weekly.html">&lt;p&gt;&lt;a href=&quot;https://philipwalton.github.io/solved-by-flexbox/&quot;&gt;https://philipwalton.github.io/solved-by-flexbox/&lt;/a&gt; 认真又读了一般 ... 感觉我的 css 从来就都没学明白过 ...&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://cloud-native-mac-setup.netlify.com/&quot;&gt;https://cloud-native-mac-setup.netlify.com/&lt;/a&gt; built using vuepress by @at15  (netlify 真好用.jpg &lt;a href=&quot;https://github.com/at15/cloud-native-mac-setup&quot;&gt;https://github.com/at15/cloud-native-mac-setup&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/cosname/cosx.org/issues/819&quot;&gt;https://github.com/cosname/cosx.org/issues/819&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;统计之都也开始做月报了，还可以发招聘广告（&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/golang/website&quot;&gt;https://github.com/golang/website&lt;/a&gt; future home of the golang.org website&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Algorithms by Jeff Erickson&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://jeffe.cs.illinois.edu/teaching/algorithms/&quot;&gt;http://jeffe.cs.illinois.edu/teaching/algorithms/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;题都挺有意思的（♣♥题相当难（&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://matplotlib.org/gallery/showcase/xkcd.html#sphx-glr-gallery-showcase-xkcd-py&quot;&gt;https://matplotlib.org/gallery/showcase/xkcd.html#sphx-glr-gallery-showcase-xkcd-py&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;xkcd 风格的 matplotlib 画图&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/HackerPoet/NonEuclidean&quot;&gt;https://github.com/HackerPoet/NonEuclidean&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;非欧空间渲染引擎（&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=kEB11PQ9Eo8&amp;feature=youtu.be&quot;&gt;https://www.youtube.com/watch?v=kEB11PQ9Eo8&amp;amp;feature=youtu.be&lt;/a&gt; 作者解释说这种渲染引擎可以用在 VR 中：如果我们可以将解谜游戏的很多很多房间放进非欧空间，那么玩 VR 游戏的人可以只在有限的范围里走（&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/dvyukov/go-fuzz&quot;&gt;https://github.com/dvyukov/go-fuzz&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Randomized testing for Go&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://www.bilibili.com/video/av39933064&quot;&gt;https://www.bilibili.com/video/av39933064&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;【技术分享】时序数据库简介（上海大学开源社区/无字幕/18-19 冬 6）&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/lni/dragonboat&quot;&gt;https://github.com/lni/dragonboat&lt;/a&gt; Dragonboat is a feature complete and high performance multi-group Raft library in Go (use rocksdb for storage)&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://babeljs.io/docs/en/learn&quot;&gt;https://babeljs.io/docs/en/learn&lt;/a&gt; 学下 es2015 ... 居然支持了 object deconstruction&lt;/p&gt;

&lt;p&gt;已经 playground 自带 transpiler 的 &lt;a href=&quot;https://babeljs.io/repl#?babili=false&amp;browsers=&amp;build=&amp;builtIns=false&amp;spec=false&amp;loose=false&amp;code_lz=GYVwdgxgLglg9mABAcwBQG8wEMC2BTALkQA8BfASkXQChFEIEBnOAGzwDoW41jyBuaqWppMuQogCsFakA&amp;debug=false&amp;forceAllTransforms=false&amp;shippedProposals=false&amp;circleciRepo=&amp;evaluate=false&amp;fileSize=false&amp;timeTravel=true&amp;sourceType=module&amp;lineWrap=true&amp;presets=es2015%2Creact%2Cstage-2&amp;prettier=false&amp;targets=&amp;version=6.26.0&amp;envVersion=&quot;&gt;time travel&lt;/a&gt; 很赞 &lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://ban.ai/multics/&quot;&gt;https://ban.ai/multics/&lt;/a&gt; found from &lt;a href=&quot;https://zhuanlan.zhihu.com/c_185117725&quot;&gt;https://zhuanlan.zhihu.com/c_185117725&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Bask in the glory of classic Multics ALM, APL, BASIC, BCPL, C, COBOL, EXEC_COM, Fortran, MacLISP, MIX, Pascal, PL/I, and RDC programming languages and the Emacs, TECO, QEDX, TED, and EDM text editors. Play games.  Exchange messages, email, and participate in Multics Forum meetings.  Experience real timesharing — as a public utility&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/openshift/cluster-image-registry-operator&quot;&gt;https://github.com/openshift/cluster-image-registry-operator&lt;/a&gt; operator for managing container registry&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://myoctocat.com/&quot;&gt;https://myoctocat.com/&lt;/a&gt; @gaocegege &lt;/p&gt;

&lt;hr&gt;</content><author><name>东岳</name></author><category term="Weekly" /><summary type="html">https://philipwalton.github.io/solved-by-flexbox/ 认真又读了一般 ... 感觉我的 css 从来就都没学明白过 ...</summary></entry><entry><title type="html">Weekly</title><link href="https://weekly.dongyueweb.com/weekly/2019/01/01/weekly.html" rel="alternate" type="text/html" title="Weekly" /><published>2019-01-01T00:00:00+08:00</published><updated>2019-01-01T00:00:00+08:00</updated><id>https://weekly.dongyueweb.com/weekly/2019/01/01/weekly</id><content type="html" xml:base="https://weekly.dongyueweb.com/weekly/2019/01/01/weekly.html">&lt;p&gt;&lt;a href=&quot;https://github.com/thlorenz/doctoc&quot;&gt;https://github.com/thlorenz/doctoc&lt;/a&gt; generate toc inside a git repo, saw from @gaocegege cyclone ...&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Rebilly/ReDoc/&quot;&gt;https://github.com/Rebilly/ReDoc/&lt;/a&gt; OpenAPI/Swagger-generated API Reference Documentation, used by nirvana &lt;a href=&quot;https://github.com/caicloud/nirvana/blob/master/cmd/nirvana/api/api.go#L264-L272&quot;&gt;https://github.com/caicloud/nirvana/blob/master/cmd/nirvana/api/api.go#L264-L272&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://ops.tips/blog/udp-client-and-server-in-go/&quot;&gt;https://ops.tips/blog/udp-client-and-server-in-go/&lt;/a&gt; very detail and also gives some reference book  (computer network a top down approach XD)&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/concourse/concourse&quot;&gt;https://github.com/concourse/concourse&lt;/a&gt; &lt;a href=&quot;https://ops.tips/blog/how-to-run-concourse-ci-locally/&quot;&gt;https://ops.tips/blog/how-to-run-concourse-ci-locally/&lt;/a&gt; I think I saw it before but I didn&amp;#39;t star ... @gaocegege did you know that?&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://ops.tips/blog/compiling-your-own-forked-docker-release/&quot;&gt;https://ops.tips/blog/compiling-your-own-forked-docker-release/&lt;/a&gt; 老哥的 blog 都很有意思 .w. (简单到我能看懂)&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jesseduffield/lazygit&quot;&gt;https://github.com/jesseduffield/lazygit&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Are YOU tired of typing every git command directly into the terminal, but you&amp;#39;re too stubborn to use Sourcetree because you&amp;#39;ll never forgive Atlassian for making Jira? This is the app for you!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/dyweb/gommon/releases/tag/v0.0.9&quot;&gt;https://github.com/dyweb/gommon/releases/tag/v0.0.9&lt;/a&gt; gommon 0.0.9 released, support error inspection in go2 proposal, allows you to walk the error chain and expand error list is also supported&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/liamg/aminal&quot;&gt;https://github.com/liamg/aminal&lt;/a&gt;  Golang terminal emulator from scratch&lt;/p&gt;

&lt;hr&gt;</content><author><name>东岳</name></author><category term="Weekly" /><summary type="html">https://github.com/thlorenz/doctoc generate toc inside a git repo, saw from @gaocegege cyclone ...</summary></entry><entry><title type="html">Weekly</title><link href="https://weekly.dongyueweb.com/weekly/2018/12/24/weekly.html" rel="alternate" type="text/html" title="Weekly" /><published>2018-12-24T00:00:00+08:00</published><updated>2018-12-24T00:00:00+08:00</updated><id>https://weekly.dongyueweb.com/weekly/2018/12/24/weekly</id><content type="html" xml:base="https://weekly.dongyueweb.com/weekly/2018/12/24/weekly.html">&lt;p&gt;&lt;a href=&quot;https://github.com/google/graphd&quot;&gt;https://github.com/google/graphd&lt;/a&gt; The Metaweb graph repository server, backend for Freebase &lt;a href=&quot;https://developers.google.com/freebase/&quot;&gt;https://developers.google.com/freebase/&lt;/a&gt; &lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/golang/tools/tree/master/internal/lsp&quot;&gt;https://github.com/golang/tools/tree/master/internal/lsp&lt;/a&gt; go 官方已经在做 language server 了 /w\ &lt;a href=&quot;https://mattn.kaoriya.net/software/lang/go/20181217000056.htm&quot;&gt;https://mattn.kaoriya.net/software/lang/go/20181217000056.htm&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/bradfitz/exp-httpclient&quot;&gt;https://github.com/bradfitz/exp-httpclient&lt;/a&gt; Rethinking Go&amp;#39;s HTTP client 有一些我在 go.ice 里的 httpclient 里可以解决 增加 type 对 encode/decode 更好的支持 cc @gaocegege (之前在公司已经实现了一个 ....&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;k8s 是的，不过我觉得更值得参考的是 &lt;a href=&quot;https://caicloud.github.io/nirvana/zh-hans/guides/client.html&quot;&gt;https://caicloud.github.io/nirvana/zh-hans/guides/client.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;k8s 的实现过于复杂。不知道目前针对 openapi 的研究如何了，能通过它间接支持 client gen 么，可以的话估计还能做到多语言支持&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;@gaocegege 好像主要逻辑是在 &lt;a href=&quot;https://github.com/caicloud/nirvana/tree/master/utils&quot;&gt;https://github.com/caicloud/nirvana/tree/master/utils&lt;/a&gt; 下, 扫代码然后生成 client, 还有一种更简单的方法, 直接要求生成器调用 spec 的代码然后直接用 reflect 连 &lt;code&gt;go/ast&lt;/code&gt; 都不需要了 ... 我先写点 prototype 试试, openapi 好像什么都支持 &lt;a href=&quot;https://github.com/OpenAPITools/openapi-generator&quot;&gt;https://github.com/OpenAPITools/openapi-generator&lt;/a&gt; 但不知道自定义程度如何 ... &lt;/p&gt;

&lt;p&gt;另外我看到 nirvana 也支持生成 swagger 所以也可以生成 swagger 然后让 openapi/swagger 生成其他语言的 .... 我很讨厌把 spec 写在 yaml 里 ... 很容易就 out of sync 了 ... &lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/go-internals-cn/go-internals&quot;&gt;https://github.com/go-internals-cn/go-internals&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;go-internals 本书是关于 Go 程序设计语言内部实现原理的阐释，当前正在进行中。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.golang.org/modules2019&quot;&gt;https://blog.golang.org/modules2019&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Interested in Go modules? Learn what the Go team has planned for modules in 2019&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/kubernetes-sigs/kubebuilder&quot;&gt;https://github.com/kubernetes-sigs/kubebuilder&lt;/a&gt; and &lt;a href=&quot;https://github.com/operator-framework&quot;&gt;https://github.com/operator-framework&lt;/a&gt; difference? And controller runtime? @gaocegege &lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/gardener/gardener&quot;&gt;https://github.com/gardener/gardener&lt;/a&gt; from SAP used to create kubernetes cluter &lt;a href=&quot;https://kubernetes.io/blog/2018/05/17/gardener/&quot;&gt;https://kubernetes.io/blog/2018/05/17/gardener/&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/kyma-project/kyma&quot;&gt;https://github.com/kyma-project/kyma&lt;/a&gt; also from SAP, wrapper on top of knative which is wrapper on top of istio&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/strapdata/elassandra&quot;&gt;https://github.com/strapdata/elassandra&lt;/a&gt; Elassandra = Elasticsearch + Apache Cassandra ... saw it when looking at a k8s cassandra operator &lt;a href=&quot;https://github.com/instaclustr/cassandra-operator&quot;&gt;https://github.com/instaclustr/cassandra-operator&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;</content><author><name>东岳</name></author><category term="Weekly" /><summary type="html">https://github.com/google/graphd The Metaweb graph repository server, backend for Freebase https://developers.google.com/freebase/</summary></entry><entry><title type="html">Weekly</title><link href="https://weekly.dongyueweb.com/weekly/2018/12/17/weekly.html" rel="alternate" type="text/html" title="Weekly" /><published>2018-12-17T00:00:00+08:00</published><updated>2018-12-17T00:00:00+08:00</updated><id>https://weekly.dongyueweb.com/weekly/2018/12/17/weekly</id><content type="html" xml:base="https://weekly.dongyueweb.com/weekly/2018/12/17/weekly.html">&lt;p&gt;&lt;a href=&quot;https://github.com/bazil/fuse&quot;&gt;https://github.com/bazil/fuse&lt;/a&gt; fuse implemented in pure go used by peerkeep &lt;a href=&quot;https://github.com/perkeep/perkeep/blob/master/cmd/pk-mount/pkmount.go&quot;&gt;https://github.com/perkeep/perkeep/blob/master/cmd/pk-mount/pkmount.go&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://blockdiag.com/en/&quot;&gt;http://blockdiag.com/en/&lt;/a&gt; generate sequence, network diagrams from text file &lt;a href=&quot;https://github.com/blockdiag/seqdiag&quot;&gt;https://github.com/blockdiag/seqdiag&lt;/a&gt;  I think dot also support it, but I never used dot before ... didn&amp;#39;t use this either, saw it in the fuse project above&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/bazil/fuse/blob/master/doc/mount-linux.seq&quot;&gt;https://github.com/bazil/fuse/blob/master/doc/mount-linux.seq&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/5621298/49716687-52de3680-fc09-11e8-935e-60bf8f33a05b.png&quot; alt=&quot;mount-linux seq&quot;&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;from &lt;a href=&quot;https://github.com/zenany/weekly/commit/b9afaaa87876ef8d6e3c544fd890f792a4b18d81&quot;&gt;https://github.com/zenany/weekly/commit/b9afaaa87876ef8d6e3c544fd890f792a4b18d81&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://robertheaton.com/2018/12/06/a-blogging-style-guide/&quot;&gt;https://robertheaton.com/2018/12/06/a-blogging-style-guide/&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;如果有写 blog 的想法 那就写 (鸽)&lt;/li&gt;
&lt;li&gt;如果想法很多, 分两个 blog 写并保证每个是完整的&lt;/li&gt;
&lt;li&gt;不要讲笑话, 先把关键的东西讲明白 (说我呢.jpg)&lt;/li&gt;
&lt;li&gt;写 blog 前好好沉思 (打开 steam?&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://lctt.github.io/LFS-BOOK/lfs-sysv/LFS-BOOK.html&quot;&gt;https://lctt.github.io/LFS-BOOK/lfs-sysv/LFS-BOOK.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Linux From Scratch 的简体中文版，8.3 版本，最新版&lt;/p&gt;

&lt;p&gt;原版在 &lt;a href=&quot;http://www.linuxfromscratch.org/lfs/view/stable/&quot;&gt;http://www.linuxfromscratch.org/lfs/view/stable/&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/grafana/loki&quot;&gt;https://github.com/grafana/loki&lt;/a&gt; Like Prometheus, but for logs.  &lt;/p&gt;

&lt;p&gt;感觉就是 log 根据 label 做简单的 index (没有根据 log 内容的全文检索) 然后分 chunk 存 dynamo/s3 etc. 跟 &lt;a href=&quot;https://github.com/cortexproject/cortex&quot;&gt;https://github.com/cortexproject/cortex&lt;/a&gt; 很像 (好像就是同一波人写的 ... 无限水平扩展就是分片然后存在无限扩展的 aws 里 ...&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://landscape.cncf.io/format=landscape&quot;&gt;https://landscape.cncf.io/format=landscape&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;CNCF 旗下的 container landscape 地图&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/wangrunji0408/RustOS&quot;&gt;https://github.com/wangrunji0408/RustOS&lt;/a&gt; Rust version of THU uCore OS, supporting x86_64, RISCV32IMA(S/M), AArch64(Raspi3) (在 sjtug 里看到的 @htfy96 &lt;/p&gt;

&lt;p&gt;然后还顺带发现了 ... &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://chyyuu.gitbooks.io/simple_os_book/content/&quot;&gt;https://chyyuu.gitbooks.io/simple_os_book/content/&lt;/a&gt; 操作系统的基本原理与简单实现&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Hackerspeak - learn how to speak like a hacker&lt;/p&gt;

&lt;p&gt;(tech buzzphrase生成器&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://dmyoung1994.github.io/HackerSpeak/&quot;&gt;http://dmyoung1994.github.io/HackerSpeak/&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/docker/compose-on-kubernetes&quot;&gt;https://github.com/docker/compose-on-kubernetes&lt;/a&gt; Deploy applications described in Compose onto Kubernetes clusters &lt;a href=&quot;https://blog.docker.com/2018/12/simplifying-kubernetes-with-docker-compose-and-friends/&quot;&gt;https://blog.docker.com/2018/12/simplifying-kubernetes-with-docker-compose-and-friends/&lt;/a&gt; 木有 @gaocegege 的 twitter 我还不知道 ... 论水 twitter 的重要性&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/filosottile/calling-rust-from-go-without-cgo-at-gothamgo-2017&quot;&gt;https://speakerdeck.com/filosottile/calling-rust-from-go-without-cgo-at-gothamgo-2017&lt;/a&gt; @gaocegege ... from &lt;a href=&quot;https://blog.filippo.io/hi/&quot;&gt;https://blog.filippo.io/hi/&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=afSiVelXDTQ&quot;&gt;GopherCon 2018: Filippo Valsorda- Asynchronous Networking Patterns&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://go.googlesource.com/gollvm/&quot;&gt;https://go.googlesource.com/gollvm/&lt;/a&gt; go 居然有个 llvm 的 backend&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;@at15 有一个类似的 docker-compose to k8s translator &lt;a href=&quot;https://github.com/kubernetes/kompose&quot;&gt;https://github.com/kubernetes/kompose&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/warmchang/KubeCon-North-America-2018&quot;&gt;https://github.com/warmchang/KubeCon-North-America-2018&lt;/a&gt; &lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/thecodingmachine/gotenberg&quot;&gt;https://github.com/thecodingmachine/gotenberg&lt;/a&gt; A Docker-powered stateless API for converting HTML, Markdown and Office documents to PDF. &lt;/p&gt;

&lt;p&gt;even have a php client ... &lt;a href=&quot;https://github.com/thecodingmachine/gotenberg-php-client&quot;&gt;https://github.com/thecodingmachine/gotenberg-php-client&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;</content><author><name>东岳</name></author><category term="Weekly" /><summary type="html">https://github.com/bazil/fuse fuse implemented in pure go used by peerkeep https://github.com/perkeep/perkeep/blob/master/cmd/pk-mount/pkmount.go</summary></entry><entry><title type="html">Weekly</title><link href="https://weekly.dongyueweb.com/weekly/2018/12/10/weekly.html" rel="alternate" type="text/html" title="Weekly" /><published>2018-12-10T00:00:00+08:00</published><updated>2018-12-10T00:00:00+08:00</updated><id>https://weekly.dongyueweb.com/weekly/2018/12/10/weekly</id><content type="html" xml:base="https://weekly.dongyueweb.com/weekly/2018/12/10/weekly.html">&lt;p&gt;&lt;a href=&quot;https://github.com/deebloo/things-you-can-do-in-a-web-worker&quot;&gt;https://github.com/deebloo/things-you-can-do-in-a-web-worker&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Web Workers give web developers the ability to run code in multiple threads. 这个是 web worker 可以做的一些事情&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/artzub/GitHubVisualizer&quot;&gt;https://github.com/artzub/GitHubVisualizer&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;GitHub Contributions Visualizer&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/5100735/49417712-e226bc80-f7b9-11e8-8569-b522759f820e.png&quot; alt=&quot;screenshot from 2018-12-04 11-40-29&quot;&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;最近写完了 Nand2Tetris 的 VM Code Translator，发现编译器一类的软件似乎没有写单元测试的必要。但是我们可以直接用它编译几个程序来测试功能。&lt;/p&gt;

&lt;p&gt;于是发现了 GCC 的 Test Suites。 &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gccint/C-Tests.html#C-Tests&quot;&gt;https://gcc.gnu.org/onlinedocs/gccint/C-Tests.html#C-Tests&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/gcc-mirror/gcc/tree/master/gcc/testsuite/g%2B%2B.dg/cpp&quot;&gt;https://github.com/gcc-mirror/gcc/tree/master/gcc/testsuite/g%2B%2B.dg/cpp&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://randomascii.wordpress.com/2018/12/03/a-not-called-function-can-cause-a-5x-slowdown/&quot;&gt;https://randomascii.wordpress.com/2018/12/03/a-not-called-function-can-cause-a-5x-slowdown/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;windows llvm 特别慢，发现是因为开了1k+ process, destroy 的时候特别慢，发现是 windows 关 GDI process 的时候特别慢，发现只要你调用了某个看起来无害的 windows parse argv 的函数就会 load GDI. 手工 parse argv （并 delay load）以后速度 5min -&amp;gt; 1min&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://www.hanselman.com/blog/AnnouncingWPFWinFormsAndWinUIAreGoingOpenSource.aspx&quot;&gt;https://www.hanselman.com/blog/AnnouncingWPFWinFormsAndWinUIAreGoingOpenSource.aspx&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;WPF WinForms WinUI 都开源了，啥时候 windows 也开源呢？&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/panjf2000/ants&quot;&gt;https://github.com/panjf2000/ants&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🐜⚡️A high-performance goroutine pool for go&lt;/p&gt;

&lt;p&gt;code base 非常小的 goroutine pool 实现&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://mysql.taobao.org/monthly/&quot;&gt;http://mysql.taobao.org/monthly/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;阿里云RDS-数据库内核组的月报，每一期都挺硬核的&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/aphyr/meangirls&quot;&gt;https://github.com/aphyr/meangirls&lt;/a&gt; CRDT 跟着 @htfy96 star (作者是 jepsen 的作者 ... 项目起名字还是很有个性的 ....&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cs.nott.ac.uk/%7Epszgmh/pearl.pdf&quot;&gt;http://www.cs.nott.ac.uk/~pszgmh/pearl.pdf&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Functional Pearls
Monadic Parsing in Haskell&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;在看 Real World Haskell 的时候看到 Monad 和 fmap 看的云里雾里。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://adit.io/posts/2013-04-17-functors,_applicatives,_and_monads_in_pictures.html&quot;&gt;http://adit.io/posts/2013-04-17-functors,_applicatives,_and_monads_in_pictures.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Functors, Applicatives, And Monads In Pictures&lt;/p&gt;

&lt;p&gt;看完这篇就差不多理解了（&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/etcd-io/gofail&quot;&gt;https://github.com/etcd-io/gofail&lt;/a&gt; 在 tidb 群里看到的 一开始以为是基于 go/ast 之类的 ... 然后发现是字符串替换 ... &lt;a href=&quot;https://github.com/etcd-io/gofail/blob/master/code/rewrite.go&quot;&gt;https://github.com/etcd-io/gofail/blob/master/code/rewrite.go&lt;/a&gt; (应该性能更高.jpg&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/sausheong/gonn&quot;&gt;https://github.com/sausheong/gonn&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Building a simple neural network in Go &lt;/p&gt;

&lt;p&gt;竟然还有 gonum.org/v1/gonum/mat 这种库&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ahmetb/kubectx&quot;&gt;https://github.com/ahmetb/kubectx&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;切换 Kubernetes 集群的命令行工具，当你有多个集群的时候就会发现非常有用&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/chromedp/chromedp&quot;&gt;https://github.com/chromedp/chromedp&lt;/a&gt; A faster, simpler way to drive browsers supporting the Chrome DevTools Protocol.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/me115/design_patterns&quot;&gt;https://github.com/me115/design_patterns&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;设计模式介绍，每一个都有列出重要程度，方便从最常用的开始学习&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/shiftkey/desktop&quot;&gt;https://github.com/shiftkey/desktop&lt;/a&gt; github desktop for linux 亲测可用&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/crossplaneio/crossplane&quot;&gt;https://github.com/crossplaneio/crossplane&lt;/a&gt; The open source multicloud control plane&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/rust-clique/human-panic&quot;&gt;https://github.com/rust-clique/human-panic&lt;/a&gt; Panic messages for humans. &lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://hacks.mozilla.org/2018/12/rust-2018-is-here/&quot;&gt;https://hacks.mozilla.org/2018/12/rust-2018-is-here/&lt;/a&gt; 对 Rust Edition 概念非常好的介绍，终于看懂 Edition 是啥了...&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://jepsen.io/consistency&quot;&gt;https://jepsen.io/consistency&lt;/a&gt; 一致性模型间的关系&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/sahib/brig&quot;&gt;https://github.com/sahib/brig&lt;/a&gt;  File synchronization on top of ipfs with git like interface and FUSE filesystem
主要是看到有 fuse &lt;a href=&quot;https://github.com/sahib/brig/tree/master/fuse&quot;&gt;https://github.com/sahib/brig/tree/master/fuse&lt;/a&gt; &lt;/p&gt;

&lt;hr&gt;</content><author><name>东岳</name></author><category term="Weekly" /><summary type="html">https://github.com/deebloo/things-you-can-do-in-a-web-worker

Web Workers give web developers the ability to run code in multiple threads. 这个是 web worker 可以做的一些事情</summary></entry><entry><title type="html">Weekly</title><link href="https://weekly.dongyueweb.com/weekly/2018/12/03/weekly.html" rel="alternate" type="text/html" title="Weekly" /><published>2018-12-03T00:00:00+08:00</published><updated>2018-12-03T00:00:00+08:00</updated><id>https://weekly.dongyueweb.com/weekly/2018/12/03/weekly</id><content type="html" xml:base="https://weekly.dongyueweb.com/weekly/2018/12/03/weekly.html">&lt;p&gt;yet another npm story&lt;code&gt;https://github.com/dominictarr/event-stream/issues/116&lt;/code&gt; from @htfy96 twitter and I am just a carrier for @arrowrowe (didn&amp;#39;t use the link format to avoid gh show issue reference on the other end)&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;gorilla/sessions provides cookie and filesystem sessions and infrastructure for custom session backends.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/gorilla/sessions&quot;&gt;https://github.com/gorilla/sessions&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://aws.amazon.com/blogs/opensource/firecracker-open-source-secure-fast-microvm-serverless/&quot;&gt;https://aws.amazon.com/blogs/opensource/firecracker-open-source-secure-fast-microvm-serverless/&lt;/a&gt; 
&lt;a href=&quot;https://github.com/firecracker-microvm/firecracker&quot;&gt;https://github.com/firecracker-microvm/firecracker&lt;/a&gt; (written in rust) also has adapter for containerd &lt;a href=&quot;https://github.com/firecracker-microvm/firecracker-containerd&quot;&gt;https://github.com/firecracker-microvm/firecracker-containerd&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;seems just a daemon to wrap KVM w/ REST API?&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Mundane is a Rust cryptography library backed by BoringSSL that is difficult to misuse, ergonomic, and performant (in that order).&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/google/mundane&quot;&gt;https://github.com/google/mundane&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;@codeworm96 即将要贡献代码的项目&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/firecracker-microvm/firecracker&quot;&gt;https://github.com/firecracker-microvm/firecracker&lt;/a&gt;  Secure and fast microVMs for serverless computing.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.zhihu.com/question/303920344&quot;&gt;如何评价aws开源的firecracker，它对接下来的虚拟机、容器发展方向带来什么变化吗？&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/facebookexperimental/MIRAI&quot;&gt;https://github.com/facebookexperimental/MIRAI&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Mirai is an abstract interpreter for the Rust compiler&amp;#39;s mid-level intermediate representation (MIR). It is intended to become a widely used static analysis tool for Rust. The initial focus will be on taint analyis.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Cool.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/google/wire&quot;&gt;https://github.com/google/wire&lt;/a&gt; Compile-time Dependency Injection for Go used by &lt;a href=&quot;https://github.com/google/go-cloud&quot;&gt;https://github.com/google/go-cloud&lt;/a&gt;  saw it in meetup &lt;a href=&quot;https://github.com/enocom/presentations/tree/master/wire&quot;&gt;https://github.com/enocom/presentations/tree/master/wire&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/dotnet/coreclr/blob/b3475eb87a5f28fb88cf23ebe30f174eff75bb46/Documentation/design-docs/GuardedDevirtualization.md?utm_source=wechat_session&amp;utm_medium=social&amp;utm_oi=27912371699712&quot;&gt;https://github.com/dotnet/coreclr/blob/b3475eb87a5f28fb88cf23ebe30f174eff75bb46/Documentation/design-docs/GuardedDevirtualization.md?utm_source=wechat_session&amp;amp;utm_medium=social&amp;amp;utm_oi=27912371699712&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;瞻仰大佬是怎么做编译器优化的&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/objectbox/objectbox-go&quot;&gt;https://github.com/objectbox/objectbox-go&lt;/a&gt; ObjectBox is an easy to use, object-oriented lightweight database and a full alternative to SQLite.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Eat My Data: How Everybody Gets File IO Wrong (2008)&lt;/p&gt;

&lt;p&gt;发现写的raft老是丢数据……读了这个才发现以前对“落盘”的理解都不对（&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.slideshare.net/nan1nan1/eat-my-data&quot;&gt;https://www.slideshare.net/nan1nan1/eat-my-data&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://crawshaw.io/blog/utf7&quot;&gt;https://crawshaw.io/blog/utf7&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;imap 协议默认用的是一种 modified utf7&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://increment.com/documentation/&quot;&gt;https://increment.com/documentation/&lt;/a&gt; stripe 的人讲怎么写文档 (公司内部 &amp;amp; 开源) 有一系列文章&lt;/p&gt;

&lt;p&gt;其中一篇 &lt;a href=&quot;https://increment.com/documentation/notes-on-the-synthesis-of-labyrinths/&quot;&gt;notes-on-the-synthesis-of-labyrinths&lt;/a&gt; 里面提的很好的一点是不应该只讲最好的解决方法，而是应该给出完整的 context。实际的开发流程往往是一个图的 dfs (打开 google 然后一路点进去，遇到错路再退回来) 而很多文档和文章只是给出一个线性的流程，这样大部分读者很难对里面描述的东西感到信服，也不能把里面的经验用到自己的开发当中。(不过也因项目而易，有的项目光 get start 就能让人看很久了 ...)&lt;/p&gt;

&lt;p&gt;现在越来越觉得维护一个好的文档是十分重要的, 能想清一个问题并且把各种方法的利弊讲出来其实比写出恰好能够工作的代码更重要 (即使是只有自己开发和自己使用的坑(伤感 ...ry))。当然上班的时候更多还是就写一些明明知道以后会坑别人的代码, 毕竟我已经被坑的麻木了 .. &lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;提供一个思路：Design doc应该由大组编写一个template，我见过的常见section有：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;project staus (eg. draft, reviewed, implementing, experimenting, finalized).&lt;/li&gt;
&lt;li&gt;Contact info (eg. Eng, PM).&lt;/li&gt;
&lt;li&gt;TL;DR&lt;/li&gt;
&lt;li&gt;Background&lt;/li&gt;
&lt;li&gt;Objection (including goal, non-goal).&lt;/li&gt;
&lt;li&gt;Design Overview&lt;/li&gt;
&lt;li&gt;Design Details&lt;/li&gt;
&lt;li&gt;Other design options (and why we don&amp;#39;t do it).&lt;/li&gt;
&lt;li&gt;Testing plan&lt;/li&gt;
&lt;li&gt;Rollout plan&lt;/li&gt;
&lt;li&gt;Q&amp;amp;A&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;感觉这样每个Eng都会cover这些design options，然后每一份design都会收录在组里文档目录里，方便后面的人review。&lt;/p&gt;

&lt;p&gt;Add a link to keep the content in weekly: &lt;a href=&quot;https://google.com&quot;&gt;https://google.com&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/wowlusitong/awesome-education&quot;&gt;https://github.com/wowlusitong/awesome-education&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;学生福利-收集支持教育优惠的软件与服务 &lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://live.bilibili.com/4630260&quot;&gt;https://live.bilibili.com/4630260&lt;/a&gt; tidb hackthon 有人做了 timeseries with TiKV (一天速成 rust 和失败 ...&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p1190r0.html&quot;&gt;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p1190r0.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;herb：6个operator太多了，我们搞一个 spaceship operator 抄一抄 java
本文作者：可是这样 operator!= 就会变慢，比如两个不等长的 vector 本可以直接返回 true 现在就得找一下是大于还是小于&lt;/p&gt;

&lt;p&gt;然后提了100种听起来都怪怪的解决方案。为啥不直接允许用户重写 operator== 然后比 spaceship 优先级高呢？&lt;/p&gt;

&lt;hr&gt;

&lt;blockquote&gt;
&lt;p&gt;Eat My Data: How Everybody Gets File IO Wrong (2008)&lt;/p&gt;

&lt;p&gt;发现写的raft老是丢数据……读了这个才发现以前对“落盘”的理解都不对（&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.slideshare.net/nan1nan1/eat-my-data&quot;&gt;https://www.slideshare.net/nan1nan1/eat-my-data&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;tl;dr Use &lt;code&gt;fsync&lt;/code&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;from &lt;a href=&quot;https://github.com/zenany/weekly/commit/ce8caf00a487942881333cdd5a56b80e3e53e9f2&quot;&gt;https://github.com/zenany/weekly/commit/ce8caf00a487942881333cdd5a56b80e3e53e9f2&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/elsewhencode/project-guidelines&quot;&gt;https://github.com/elsewhencode/project-guidelines&lt;/a&gt; 主要是针对 js 项目的，没什么特别新的东西，但是能完全做到(还是得看队友 ....&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;from &lt;a href=&quot;https://github.com/zenany/weekly/commit/ce8caf00a487942881333cdd5a56b80e3e53e9f2&quot;&gt;https://github.com/zenany/weekly/commit/ce8caf00a487942881333cdd5a56b80e3e53e9f2&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://thecreativeindependent.com/guides/how-to-balance-full-time-work-with-creative-projects/&quot;&gt;https://thecreativeindependent.com/guides/how-to-balance-full-time-work-with-creative-projects/&lt;/a&gt; 虽然不是讲软件的但是还是讲的很好的, 比如拒绝周末跟别人出去玩(这点可以丧起来 @xplorld ) done is better than perfect etc... 当然看文章总是容易，做到里面说的就还是需要很大的毅力了 ....&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;from &lt;a href=&quot;https://news.ycombinator.com/item?id=18508284&quot;&gt;https://news.ycombinator.com/item?id=18508284&lt;/a&gt; a mac ascii art software, no longer under develop though, it&amp;#39;s now $9 &lt;a href=&quot;https://monodraw.helftone.com/&quot;&gt;https://monodraw.helftone.com/&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;@xplorld fsync的语义也是奥妙重重……在Mac上fsync也没用（&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://wiki.postgresql.org/wiki/Fsync_Errors&quot;&gt;https://wiki.postgresql.org/wiki/Fsync_Errors&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ithinco/i-am-chinese-the-dragonfly-must-go-on&quot;&gt;https://github.com/ithinco/i-am-chinese-the-dragonfly-must-go-on&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;我其实不是太懂，搜索引擎也不是只有百度啊&lt;/p&gt;

&lt;hr&gt;</content><author><name>东岳</name></author><category term="Weekly" /><summary type="html">yet another npm storyhttps://github.com/dominictarr/event-stream/issues/116 from @htfy96 twitter and I am just a carrier for @arrowrowe (didn&amp;#39;t use the link format to avoid gh show issue reference on the other end)</summary></entry><entry><title type="html">Weekly</title><link href="https://weekly.dongyueweb.com/weekly/2018/11/26/weekly.html" rel="alternate" type="text/html" title="Weekly" /><published>2018-11-26T00:00:00+08:00</published><updated>2018-11-26T00:00:00+08:00</updated><id>https://weekly.dongyueweb.com/weekly/2018/11/26/weekly</id><content type="html" xml:base="https://weekly.dongyueweb.com/weekly/2018/11/26/weekly.html">&lt;p&gt;&lt;a href=&quot;https://github.com/AliyunContainerService/log-pilot&quot;&gt;https://github.com/AliyunContainerService/log-pilot&lt;/a&gt; 阿里云的人写的 docker 日志收集, 应该是调 docker api 来读 ...  docker 本身的日志存储好像实现的比较一般 ...&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/rstudio-education/rstats-ed&quot;&gt;https://github.com/rstudio-education/rstats-ed&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;List of courses teaching R&lt;/p&gt;

&lt;p&gt;R 语言真的还蛮好用的&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;The paper trail&lt;/p&gt;

&lt;p&gt;Distributed systems and data processing的论文notes，摸鱼了好久后最近好像又更新了几篇……&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.the-paper-trail.org/&quot;&gt;https://www.the-paper-trail.org/&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/bombela/backward-cpp&quot;&gt;https://github.com/bombela/backward-cpp&lt;/a&gt; A beautiful stack trace pretty printer for C++&lt;/p&gt;

&lt;p&gt;(又要开始入门 cpp 了&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/westerndigitalcorporation/blb&quot;&gt;https://github.com/westerndigitalcorporation/blb&lt;/a&gt; Blb is a distributed object storage system designed for use on bare metal in cluster computing environments.&lt;/p&gt;

&lt;p&gt;(abandoned, the company was acquired by wd and the code is open sourced as educational source&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://gotocph.com/2018/sessions/599&quot;&gt;https://gotocph.com/2018/sessions/599&lt;/a&gt; good ideas thatwe forgot, keynote by Erlang inventor JoeArmstrong &lt;a href=&quot;https://files.gotocon.com/uploads/slides/conference_10/599/original/forget40.pdf&quot;&gt;slide&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There is also a PL track &lt;a href=&quot;https://gotocph.com/2018/tracks/114&quot;&gt;https://gotocph.com/2018/tracks/114&lt;/a&gt; which .. well I don&amp;#39;t think is very interesting&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/whusnoopy/renrenBackup&quot;&gt;https://github.com/whusnoopy/renrenBackup&lt;/a&gt; A backup tool for renren.com &lt;/p&gt;

&lt;p&gt;人人被收购了，早日 backup 保平安&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://www.inf.ethz.ch/personal/wirth/CompilerConstruction/&quot;&gt;https://www.inf.ethz.ch/personal/wirth/CompilerConstruction/&lt;/a&gt; by Nikalaus Wirth author of Pascal &lt;/p&gt;

&lt;p&gt;Found when looking at A Plea for Lean Software and searching for the author &lt;a href=&quot;https://github.com/at15/papers-i-read/issues/120&quot;&gt;https://github.com/at15/papers-i-read/issues/120&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/google/or-tools&quot;&gt;https://github.com/google/or-tools&lt;/a&gt; Google Optimization Tools (a.k.a., OR-Tools) is an open-source, fast and portable software suite for solving combinatorial optimization problems&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ballerina-platform/ballerina-lang&quot;&gt;https://github.com/ballerina-platform/ballerina-lang&lt;/a&gt; Ballerina is a compiled, type safe, concurrent programming language designed to make it simple to write microservices that integrate APIs.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://softwareengineeringdaily.com/2018/07/12/ballerina-language-with-tyler-jewell/&quot;&gt;https://softwareengineeringdaily.com/2018/07/12/ballerina-language-with-tyler-jewell/&lt;/a&gt; &lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/fntlnz/kubectl-trace&quot;&gt;https://github.com/fntlnz/kubectl-trace&lt;/a&gt; run &lt;a href=&quot;https://github.com/iovisor/bpftrace&quot;&gt;https://github.com/iovisor/bpftrace&lt;/a&gt; on your kubernetes cluster using  kubectl&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;abidiff compares the Application Binary Interfaces (ABI) of two shared libraries in ELF format based on dwarf debug information.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://sourceware.org/libabigail/manual/abidiff.html&quot;&gt;https://sourceware.org/libabigail/manual/abidiff.html&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://dave.cheney.net/2018/09/16/internets-of-interest-2-john-ousterhout-discusses-a-philosophy-of-software-design&quot;&gt;https://dave.cheney.net/2018/09/16/internets-of-interest-2-john-ousterhout-discusses-a-philosophy-of-software-design&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are also some other interesting topics in Dave&amp;#39;s internets of interests series, found it when looking at &lt;a href=&quot;https://dave.cheney.net/2018/01/08/gos-hidden-pragmas&quot;&gt;https://dave.cheney.net/2018/01/08/gos-hidden-pragmas&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;</content><author><name>东岳</name></author><category term="Weekly" /><summary type="html">https://github.com/AliyunContainerService/log-pilot 阿里云的人写的 docker 日志收集, 应该是调 docker api 来读 ...  docker 本身的日志存储好像实现的比较一般 ...</summary></entry><entry><title type="html">Weekly</title><link href="https://weekly.dongyueweb.com/weekly/2018/11/19/weekly.html" rel="alternate" type="text/html" title="Weekly" /><published>2018-11-19T00:00:00+08:00</published><updated>2018-11-19T00:00:00+08:00</updated><id>https://weekly.dongyueweb.com/weekly/2018/11/19/weekly</id><content type="html" xml:base="https://weekly.dongyueweb.com/weekly/2018/11/19/weekly.html">&lt;p&gt;&lt;a href=&quot;https://github.com/Cody2333/koa-swagger-decorator&quot;&gt;https://github.com/Cody2333/koa-swagger-decorator&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Koa 框架下的轮子，用来做参数的输入校验和 Swagger 文档的自动生成&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/google/googletest&quot;&gt;https://github.com/google/googletest&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;最近开始肝 RoboMaster，开始写 C++ 了，于是开始感受了一下 C++ 的单元测试框架。&lt;/p&gt;

&lt;p&gt;总的来说，如果要在 CLion / CMake 里写 Unit Test，Google Test 大概是我唯一配置得来的了……&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;再附上 CLion 的配置和一个可用的 CMakeLists
&lt;a href=&quot;https://www.jetbrains.com/help/clion/creating-google-test-run-debug-configuration-for-test.html&quot;&gt;https://www.jetbrains.com/help/clion/creating-google-test-run-debug-configuration-for-test.html&lt;/a&gt;
&lt;a href=&quot;https://github.com/SkyZH/CAHRR/blob/master/test/CMakeLists.txt&quot;&gt;https://github.com/SkyZH/CAHRR/blob/master/test/CMakeLists.txt&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;C Portability Lessons from Weird Machines&lt;/p&gt;

&lt;p&gt;为啥C有那么多的undefined和implementation-defined behavior？这篇文章就包括了很多奇奇怪怪的机器，有的char是9个bits，有的访问&lt;code&gt;0x0 ~ 0xff&lt;/code&gt;以外的地址会特别慢，有的机子从&lt;code&gt;char*&lt;/code&gt;到&lt;code&gt;int*&lt;/code&gt;的转换不仅仅是算数的无符号扩展，有的机子最小寻址单位是nibble（4 bits），有的机子是mixed endian （&lt;code&gt;Unix&lt;/code&gt; -&amp;gt; &lt;code&gt;nUxi&lt;/code&gt;）。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://begriffs.com/posts/2018-11-15-c-portability.html?hn=1&quot;&gt;https://begriffs.com/posts/2018-11-15-c-portability.html?hn=1&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Azure/golua&quot;&gt;https://github.com/Azure/golua&lt;/a&gt; lua 的 go 实现 .w.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/kubeedge/kubeedge&quot;&gt;https://github.com/kubeedge/kubeedge&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Kubernetes Native Edge Computing Management Framework &lt;a href=&quot;http://kubeedge.io&quot;&gt;http://kubeedge.io&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;hashicorp c1m &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.hashicorp.com/c1m&quot;&gt;https://www.hashicorp.com/c1m&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.infoq.com/articles/scaling-containers-hashicorp-nomad&quot;&gt;https://www.infoq.com/articles/scaling-containers-hashicorp-nomad&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/hashicorp/c1m&quot;&gt;https://github.com/hashicorp/c1m&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Schedulers generally fall into one of three categories: monolithic, offer based, or shared state. Monolithic schedulers have a single, centralized location for scheduling logic, often bound to a single machine. Offer-based schedulers (such as Mesos), also have a single location for scheduling decisions, but can parallelize by offering resources to multiple frameworks that each have their own tasks. Shared state schedulers have multiple locations processing scheduling decisions. Unified state is achieved through use of concurrency, allowing scheduling to be done in parallel&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.nomadproject.io/docs/internals/scheduling.html&quot;&gt;https://www.nomadproject.io/docs/internals/scheduling.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;所以 k8s 的 scheduler 是? @gaocegege 记得策策好像说过更喜欢 nomad 的做法&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tbodt/ish&quot;&gt;https://github.com/tbodt/ish&lt;/a&gt; Linux shell for iOS&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;So a warning: Long-term exposure to this code may cause loss of sanity, nightmares about GAS macros and linker errors, or any number of other debilitating side effects. This code is known to the State of California to cause cancer, birth defects, and reproductive harm.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/MicrosoftDocs/azure-docs&quot;&gt;https://github.com/MicrosoftDocs/azure-docs&lt;/a&gt; 附带的插件和入门文档很详细  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;插件 &lt;a href=&quot;https://github.com/Microsoft/vscode-docs-authoring&quot;&gt;https://github.com/Microsoft/vscode-docs-authoring&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;连文档里该用什么语气都讲了 ... &lt;a href=&quot;https://docs.microsoft.com/en-us/contribute/&quot;&gt;https://docs.microsoft.com/en-us/contribute/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://t.co/H9JvPwKfgO&quot;&gt;https://t.co/H9JvPwKfgO&lt;/a&gt;  USENIX LISA 2018 (devops 之类的东西 .... 当然现在大家都 cloud native 了 ...&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/fengjueming/unblock-NetEaseMusic&quot;&gt;https://github.com/fengjueming/unblock-NetEaseMusic&lt;/a&gt; 海外用户免翻墙听网易云音乐&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/EnterpriseQualityCoding/FizzBuzzEnterpriseEdition&quot;&gt;https://github.com/EnterpriseQualityCoding/FizzBuzzEnterpriseEdition&lt;/a&gt; 让人想起 CMU-SV 的 Zhang Jia 老师的课，比如 Service Oriented Computing. 非常 Java. 非常 Enterprise.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;AMD optimized compiler&lt;/p&gt;

&lt;p&gt;AMD也仿照icc搞了个自己的编译器……不过有钱还是没钱还是能看的出来的，基本就是在clang上面加了几个pass，启用了更aggressive的编译选项。所以编译出来的代码相对icc来说还是too young&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.amd.com/amd-aocc/&quot;&gt;https://developer.amd.com/amd-aocc/&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://golang.org/lib/godoc/analysis/help.html&quot;&gt;https://golang.org/lib/godoc/analysis/help.html&lt;/a&gt; godoc 居然是自带静态分析的, 跳转 etc.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;REPT: Reverse Debugging of Failures in Deployed Software&lt;/p&gt;

&lt;p&gt;OSDI 18&amp;#39; best paper。不知道有没有机会去G家kernel搞这个……&lt;/p&gt;

&lt;p&gt;&lt;small&gt;~~自己笔记本是AMD……失败~~&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.usenix.org/system/files/osdi18-cui.pdf&quot;&gt;https://www.usenix.org/system/files/osdi18-cui.pdf&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;</content><author><name>东岳</name></author><category term="Weekly" /><summary type="html">https://github.com/Cody2333/koa-swagger-decorator

Koa 框架下的轮子，用来做参数的输入校验和 Swagger 文档的自动生成</summary></entry></feed>
